/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SoftwareEngineering;

import java.awt.Color;
import java.io.IOException;
import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


/**
 *
 * @author DeRed
 */
public class LoginUI extends javax.swing.JFrame {

    /**
     * Creates new form LoginUI
     */
    private static ConnectionManager conn;
    private final Border borderc ;
    private static String hostname;
    private static int port;
    private DefaultListModel<String> dlm = new DefaultListModel<>();
    private Schedule AppointmentList = new Schedule();
    private User loginUser;
    private ArrayList<StorageItem> item_list = new ArrayList<>();
    private Thread t ;
    public static void setConnectionInfo(String h,int p){
        LoginUI.hostname = h;
        LoginUI.port = p;
    }
    private static boolean Connection(){

        return conn.CreateSocket(hostname, port) == true;

        
    }
    
    private static String L = "";
    
    
    public LoginUI() {

        initComponents();
        //LoginLoadingGif.setVisible(false);
        borderc = LoginForm_Username.getBorder(); // USED FOR CREDENTIAL VALIDATION
        FillSchedule();
        this.setVisible(false);
        /*
        TableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int rowIndex, int mColIndex) {
              return false;
            }
        };
        this.TableOrder.setModel(model);
        */
        //this.User_MainMenu.setVisible(true);
        
 

    }
    public LoginUI(int a) {

        initComponents();
        borderc = LoginForm_Username.getBorder(); // USED FOR CREDENTIAL VALIDATION        
        this.ErrorDialog.setVisible(true);
        this.ErrorDialog.requestFocus();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        User_MainMenu = new javax.swing.JFrame();
        User_Home_Panel = new javax.swing.JPanel();
        User_Home_Body = new javax.swing.JPanel();
        User_Home_LeftSide = new javax.swing.JPanel();
        Todays_Scedule_Title = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AppointmentTable = new javax.swing.JTable();
        User_Home_RightSide = new javax.swing.JPanel();
        New_Patient_Panel = new javax.swing.JPanel();
        New_Patient_Submit = new javax.swing.JButton();
        New_Patient_Sex = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        New_Patient_Name = new javax.swing.JTextField();
        New_Patient_Surname = new javax.swing.JTextField();
        New_Patient_Phone = new javax.swing.JTextField();
        New_Patient_AMKA = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        New_Patient_BirthDate = new javax.swing.JFormattedTextField();
        New_Patient_Submit_Result = new javax.swing.JLabel();
        New_Appointment_Panel = new javax.swing.JPanel();
        New_Appointment_Patient_Name = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        New_Appointment_Doctor = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        New_Appointment_Date = new javax.swing.JFormattedTextField();
        New_Appointment_Time = new javax.swing.JFormattedTextField();
        New_Order_Panel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        paragelia_name = new javax.swing.JTextField();
        paragelia_posotita = new javax.swing.JTextField();
        kataxorisi = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        TableOrder = new javax.swing.JTable();
        deleteStorageItem = new javax.swing.JButton();
        User_MenuBar = new javax.swing.JMenuBar();
        UserMenuBar_Display = new javax.swing.JMenu();
        Display_List_Of_Appointments = new javax.swing.JMenuItem();
        Display_Patient_List = new javax.swing.JMenuItem();
        Display_Order_History = new javax.swing.JMenuItem();
        MenuBar_Prescribe = new javax.swing.JMenu();
        User_Profile_Menu_Title = new javax.swing.JMenu();
        User_Profile_Options = new javax.swing.JMenuItem();
        User_Profile_Logout = new javax.swing.JMenuItem();
        ErrorDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        PrescriptionFrame = new javax.swing.JFrame();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        PrescriptionFrame_AppointmentList = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        PrescriptionFrame_Prescription = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        Display_Schedule_Frame = new javax.swing.JFrame();
        User_Home_LeftSide1 = new javax.swing.JPanel();
        Scedule_Panel_Title = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        DatedAppointmentTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        DateFilter_From = new javax.swing.JFormattedTextField();
        DateFilter_To = new javax.swing.JFormattedTextField();
        DateFilter_Submit = new javax.swing.JButton();
        LoginFrame = new javax.swing.JPanel();
        LoginForm = new javax.swing.JPanel();
        LoginForm_Username = new javax.swing.JTextField();
        LoginForm_Password = new javax.swing.JPasswordField();
        LoginForm_SubmitButton = new javax.swing.JButton();
        LoginForm_Image = new javax.swing.JLabel();
        UsernameLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        WrongCredentialsMessage = new javax.swing.JLabel();

        User_MainMenu.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        User_MainMenu.setTitle("Αρχική Σελίδα Γραμματέας");
        User_MainMenu.setMinimumSize(new java.awt.Dimension(1024, 720));
        User_MainMenu.setPreferredSize(new java.awt.Dimension(1024, 720));
        User_MainMenu.setResizable(false);
        User_MainMenu.setSize(new java.awt.Dimension(1024, 720));
        User_MainMenu.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                User_MainMenuWindowClosed(evt);
            }
        });

        User_Home_Panel.setBackground(new java.awt.Color(204, 204, 255));
        User_Home_Panel.setMinimumSize(new java.awt.Dimension(1024, 700));
        User_Home_Panel.setPreferredSize(new java.awt.Dimension(1024, 700));

        User_Home_Body.setBackground(new java.awt.Color(153, 153, 153));
        User_Home_Body.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        User_Home_Body.setForeground(new java.awt.Color(204, 204, 255));
        User_Home_Body.setPreferredSize(new java.awt.Dimension(1024, 700));

        User_Home_LeftSide.setBackground(new java.awt.Color(255, 255, 255));
        User_Home_LeftSide.setAlignmentX(0.0F);
        User_Home_LeftSide.setAlignmentY(0.0F);
        User_Home_LeftSide.setPreferredSize(new java.awt.Dimension(480, 700));

        Todays_Scedule_Title.setBackground(new java.awt.Color(153, 153, 153));
        Todays_Scedule_Title.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Todays_Scedule_Title.setForeground(new java.awt.Color(51, 51, 51));
        Todays_Scedule_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Todays_Scedule_Title.setText("ΣΗΜΕΡΙΝΟ ΠΡΟΓΡΑΜΜΑ");
        Todays_Scedule_Title.setFocusable(false);
        Todays_Scedule_Title.setPreferredSize(new java.awt.Dimension(505, 20));

        AppointmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ΩΡΑ", "ΑΣΘΕΝΗΣ", "ΙΑΤΡΟΣ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(AppointmentTable);

        javax.swing.GroupLayout User_Home_LeftSideLayout = new javax.swing.GroupLayout(User_Home_LeftSide);
        User_Home_LeftSide.setLayout(User_Home_LeftSideLayout);
        User_Home_LeftSideLayout.setHorizontalGroup(
            User_Home_LeftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(User_Home_LeftSideLayout.createSequentialGroup()
                .addGroup(User_Home_LeftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, User_Home_LeftSideLayout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addComponent(Todays_Scedule_Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addGap(0, 0, 0))
        );
        User_Home_LeftSideLayout.setVerticalGroup(
            User_Home_LeftSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(User_Home_LeftSideLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(Todays_Scedule_Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );

        User_Home_RightSide.setBackground(new java.awt.Color(255, 255, 255));
        User_Home_RightSide.setAlignmentX(0.0F);
        User_Home_RightSide.setAlignmentY(0.0F);
        User_Home_RightSide.setPreferredSize(new java.awt.Dimension(540, 700));

        New_Patient_Panel.setBackground(new java.awt.Color(255, 255, 255));
        New_Patient_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Νέος Ασθενης", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP));
        New_Patient_Panel.setPreferredSize(new java.awt.Dimension(506, 217));

        New_Patient_Submit.setText("Καταχώριση");
        New_Patient_Submit.setMaximumSize(new java.awt.Dimension(200, 30));
        New_Patient_Submit.setMinimumSize(new java.awt.Dimension(200, 30));
        New_Patient_Submit.setPreferredSize(new java.awt.Dimension(200, 30));
        New_Patient_Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_Patient_SubmitActionPerformed(evt);
            }
        });

        New_Patient_Sex.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Άνδρας", "Γυναίκα" }));
        New_Patient_Sex.setMaximumSize(new java.awt.Dimension(220, 25));
        New_Patient_Sex.setMinimumSize(new java.awt.Dimension(220, 25));
        New_Patient_Sex.setPreferredSize(new java.awt.Dimension(220, 25));

        jLabel3.setText("Όνομα :");
        jLabel3.setMaximumSize(new java.awt.Dimension(220, 15));
        jLabel3.setMinimumSize(new java.awt.Dimension(220, 15));
        jLabel3.setPreferredSize(new java.awt.Dimension(220, 15));

        jLabel4.setText("Επώνυμο :");
        jLabel4.setMaximumSize(new java.awt.Dimension(220, 15));
        jLabel4.setMinimumSize(new java.awt.Dimension(220, 15));
        jLabel4.setPreferredSize(new java.awt.Dimension(220, 15));

        jLabel5.setText("Τηλέφωνο :");
        jLabel5.setMaximumSize(new java.awt.Dimension(220, 15));
        jLabel5.setMinimumSize(new java.awt.Dimension(220, 15));
        jLabel5.setPreferredSize(new java.awt.Dimension(220, 15));

        jLabel6.setText("ΑΜΚΑ :");
        jLabel6.setMaximumSize(new java.awt.Dimension(220, 15));
        jLabel6.setMinimumSize(new java.awt.Dimension(220, 15));
        jLabel6.setPreferredSize(new java.awt.Dimension(220, 15));

        New_Patient_Name.setMaximumSize(new java.awt.Dimension(220, 25));
        New_Patient_Name.setMinimumSize(new java.awt.Dimension(220, 15));
        New_Patient_Name.setPreferredSize(new java.awt.Dimension(220, 25));

        New_Patient_Surname.setMaximumSize(new java.awt.Dimension(220, 25));
        New_Patient_Surname.setMinimumSize(new java.awt.Dimension(220, 25));
        New_Patient_Surname.setPreferredSize(new java.awt.Dimension(220, 25));

        New_Patient_Phone.setMaximumSize(new java.awt.Dimension(220, 25));
        New_Patient_Phone.setMinimumSize(new java.awt.Dimension(220, 15));
        New_Patient_Phone.setPreferredSize(new java.awt.Dimension(220, 25));

        New_Patient_AMKA.setMaximumSize(new java.awt.Dimension(220, 25));
        New_Patient_AMKA.setMinimumSize(new java.awt.Dimension(220, 25));
        New_Patient_AMKA.setPreferredSize(new java.awt.Dimension(220, 25));

        jLabel7.setText("Ημερομηνία Γέννησης :");
        jLabel7.setMaximumSize(new java.awt.Dimension(220, 15));
        jLabel7.setMinimumSize(new java.awt.Dimension(220, 15));
        jLabel7.setPreferredSize(new java.awt.Dimension(220, 15));

        jLabel8.setText("Φύλο :");
        jLabel8.setMaximumSize(new java.awt.Dimension(220, 15));
        jLabel8.setMinimumSize(new java.awt.Dimension(220, 15));
        jLabel8.setPreferredSize(new java.awt.Dimension(220, 15));

        New_Patient_BirthDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        New_Patient_BirthDate.setText("20/12/2000");
        New_Patient_BirthDate.setMaximumSize(new java.awt.Dimension(220, 25));
        New_Patient_BirthDate.setMinimumSize(new java.awt.Dimension(220, 25));
        New_Patient_BirthDate.setPreferredSize(new java.awt.Dimension(220, 25));

        New_Patient_Submit_Result.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        New_Patient_Submit_Result.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        New_Patient_Submit_Result.setMaximumSize(new java.awt.Dimension(220, 15));
        New_Patient_Submit_Result.setMinimumSize(new java.awt.Dimension(220, 15));
        New_Patient_Submit_Result.setPreferredSize(new java.awt.Dimension(220, 15));

        javax.swing.GroupLayout New_Patient_PanelLayout = new javax.swing.GroupLayout(New_Patient_Panel);
        New_Patient_Panel.setLayout(New_Patient_PanelLayout);
        New_Patient_PanelLayout.setHorizontalGroup(
            New_Patient_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(New_Patient_PanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(New_Patient_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(New_Patient_Submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Patient_Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Patient_BirthDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Patient_Phone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addGroup(New_Patient_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Patient_Surname, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Patient_AMKA, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Patient_Sex, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Patient_Submit_Result, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        New_Patient_PanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {New_Patient_AMKA, New_Patient_Sex, New_Patient_Surname, jLabel4, jLabel6, jLabel8});

        New_Patient_PanelLayout.setVerticalGroup(
            New_Patient_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(New_Patient_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(New_Patient_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(New_Patient_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(New_Patient_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(New_Patient_Surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(New_Patient_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(New_Patient_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(New_Patient_Phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(New_Patient_AMKA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(New_Patient_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(New_Patient_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(New_Patient_BirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(New_Patient_Sex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(New_Patient_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(New_Patient_Submit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Patient_Submit_Result, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        New_Appointment_Panel.setBackground(new java.awt.Color(255, 255, 255));
        New_Appointment_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Νέο Ραντεβού", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP));
        New_Appointment_Panel.setPreferredSize(new java.awt.Dimension(506, 217));

        New_Appointment_Patient_Name.setMaximumSize(new java.awt.Dimension(220, 25));
        New_Appointment_Patient_Name.setMinimumSize(new java.awt.Dimension(220, 25));
        New_Appointment_Patient_Name.setPreferredSize(new java.awt.Dimension(220, 25));
        New_Appointment_Patient_Name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                New_Appointment_Patient_NameFocusGained(evt);
            }
        });

        jLabel9.setText("Όνομα ασθενούς :");
        jLabel9.setMaximumSize(new java.awt.Dimension(220, 15));
        jLabel9.setMinimumSize(new java.awt.Dimension(220, 15));
        jLabel9.setPreferredSize(new java.awt.Dimension(220, 15));

        jLabel10.setText(" Ημερομηνία :");
        jLabel10.setMaximumSize(new java.awt.Dimension(220, 15));
        jLabel10.setMinimumSize(new java.awt.Dimension(220, 15));
        jLabel10.setPreferredSize(new java.awt.Dimension(220, 15));

        jLabel12.setText("Ιατρός :");
        jLabel12.setMaximumSize(new java.awt.Dimension(220, 15));
        jLabel12.setMinimumSize(new java.awt.Dimension(220, 15));
        jLabel12.setPreferredSize(new java.awt.Dimension(220, 15));

        New_Appointment_Doctor.setMaximumSize(new java.awt.Dimension(220, 25));
        New_Appointment_Doctor.setMinimumSize(new java.awt.Dimension(220, 25));
        New_Appointment_Doctor.setPreferredSize(new java.awt.Dimension(220, 25));
        New_Appointment_Doctor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                New_Appointment_DoctorFocusGained(evt);
            }
        });

        jLabel13.setText("Ώρα :");
        jLabel13.setMaximumSize(new java.awt.Dimension(220, 15));
        jLabel13.setMinimumSize(new java.awt.Dimension(220, 15));
        jLabel13.setPreferredSize(new java.awt.Dimension(220, 15));

        jButton3.setText("Δημιουργία");
        jButton3.setMaximumSize(new java.awt.Dimension(200, 30));
        jButton3.setMinimumSize(new java.awt.Dimension(200, 30));
        jButton3.setPreferredSize(new java.awt.Dimension(200, 30));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        New_Appointment_Date.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-d"))));
        New_Appointment_Date.setText(LocalDate.now().toString()
        );
        New_Appointment_Date.setMaximumSize(new java.awt.Dimension(220, 25));
        New_Appointment_Date.setMinimumSize(new java.awt.Dimension(220, 25));
        New_Appointment_Date.setPreferredSize(new java.awt.Dimension(220, 25));
        New_Appointment_Date.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                New_Appointment_DateFocusGained(evt);
            }
        });

        New_Appointment_Time.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("hh:mm"))));
        New_Appointment_Time.setText(LocalTime.now().getHour()+":"+LocalTime.now().getMinute());
        New_Appointment_Time.setMaximumSize(new java.awt.Dimension(220, 25));
        New_Appointment_Time.setMinimumSize(new java.awt.Dimension(220, 25));
        New_Appointment_Time.setPreferredSize(new java.awt.Dimension(220, 25));
        New_Appointment_Time.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                New_Appointment_TimeFocusGained(evt);
            }
        });

        javax.swing.GroupLayout New_Appointment_PanelLayout = new javax.swing.GroupLayout(New_Appointment_Panel);
        New_Appointment_Panel.setLayout(New_Appointment_PanelLayout);
        New_Appointment_PanelLayout.setHorizontalGroup(
            New_Appointment_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(New_Appointment_PanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(New_Appointment_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(New_Appointment_PanelLayout.createSequentialGroup()
                        .addGroup(New_Appointment_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(New_Appointment_Patient_Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(New_Appointment_Date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44)
                        .addGroup(New_Appointment_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(New_Appointment_Time, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(New_Appointment_Doctor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        New_Appointment_PanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {New_Appointment_Date, New_Appointment_Doctor, New_Appointment_Patient_Name});

        New_Appointment_PanelLayout.setVerticalGroup(
            New_Appointment_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(New_Appointment_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(New_Appointment_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(New_Appointment_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(New_Appointment_Patient_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(New_Appointment_Doctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(New_Appointment_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(New_Appointment_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(New_Appointment_Time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(New_Appointment_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        New_Order_Panel.setBackground(new java.awt.Color(255, 255, 255));
        New_Order_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Νέα Παραγγελεία", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP));
        New_Order_Panel.setPreferredSize(new java.awt.Dimension(506, 217));

        jLabel14.setText("Όνομα :");
        jLabel14.setMaximumSize(new java.awt.Dimension(220, 25));
        jLabel14.setMinimumSize(new java.awt.Dimension(220, 25));
        jLabel14.setPreferredSize(new java.awt.Dimension(220, 15));

        jLabel16.setText("Ποσότητα :");
        jLabel16.setToolTipText("");
        jLabel16.setMaximumSize(new java.awt.Dimension(220, 25));
        jLabel16.setMinimumSize(new java.awt.Dimension(220, 25));
        jLabel16.setPreferredSize(new java.awt.Dimension(220, 15));

        paragelia_name.setMaximumSize(new java.awt.Dimension(220, 25));
        paragelia_name.setMinimumSize(new java.awt.Dimension(220, 25));
        paragelia_name.setPreferredSize(new java.awt.Dimension(220, 25));
        paragelia_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                paragelia_nameFocusGained(evt);
            }
        });
        paragelia_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paragelia_nameActionPerformed(evt);
            }
        });

        paragelia_posotita.setMaximumSize(new java.awt.Dimension(220, 25));
        paragelia_posotita.setMinimumSize(new java.awt.Dimension(220, 25));
        paragelia_posotita.setPreferredSize(new java.awt.Dimension(220, 25));
        paragelia_posotita.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                paragelia_posotitaFocusGained(evt);
            }
        });

        kataxorisi.setText("Καταχώριση");
        kataxorisi.setMaximumSize(new java.awt.Dimension(220, 30));
        kataxorisi.setMinimumSize(new java.awt.Dimension(220, 30));
        kataxorisi.setPreferredSize(new java.awt.Dimension(220, 30));
        kataxorisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kataxorisiActionPerformed(evt);
            }
        });

        jButton5.setText("Αποστολή");
        jButton5.setPreferredSize(new java.awt.Dimension(220, 30));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        TableOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TableOrder.setPreferredSize(null);
        jScrollPane4.setViewportView(TableOrder);

        deleteStorageItem.setText("Διαγραφή");
        deleteStorageItem.setMaximumSize(new java.awt.Dimension(220, 30));
        deleteStorageItem.setMinimumSize(new java.awt.Dimension(220, 30));
        deleteStorageItem.setPreferredSize(new java.awt.Dimension(220, 30));
        deleteStorageItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteStorageItemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout New_Order_PanelLayout = new javax.swing.GroupLayout(New_Order_Panel);
        New_Order_Panel.setLayout(New_Order_PanelLayout);
        New_Order_PanelLayout.setHorizontalGroup(
            New_Order_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(New_Order_PanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(New_Order_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(paragelia_posotita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(New_Order_PanelLayout.createSequentialGroup()
                        .addComponent(kataxorisi, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteStorageItem, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(paragelia_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        New_Order_PanelLayout.setVerticalGroup(
            New_Order_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, New_Order_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(New_Order_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(New_Order_PanelLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paragelia_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paragelia_posotita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(New_Order_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kataxorisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteStorageItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout User_Home_RightSideLayout = new javax.swing.GroupLayout(User_Home_RightSide);
        User_Home_RightSide.setLayout(User_Home_RightSideLayout);
        User_Home_RightSideLayout.setHorizontalGroup(
            User_Home_RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(User_Home_RightSideLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(User_Home_RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(New_Appointment_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Patient_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Order_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        User_Home_RightSideLayout.setVerticalGroup(
            User_Home_RightSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(User_Home_RightSideLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(New_Patient_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(New_Appointment_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(New_Order_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout User_Home_BodyLayout = new javax.swing.GroupLayout(User_Home_Body);
        User_Home_Body.setLayout(User_Home_BodyLayout);
        User_Home_BodyLayout.setHorizontalGroup(
            User_Home_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(User_Home_BodyLayout.createSequentialGroup()
                .addComponent(User_Home_LeftSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(User_Home_RightSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        User_Home_BodyLayout.setVerticalGroup(
            User_Home_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(User_Home_BodyLayout.createSequentialGroup()
                .addGroup(User_Home_BodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(User_Home_LeftSide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(User_Home_RightSide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        User_Home_BodyLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {User_Home_LeftSide, User_Home_RightSide});

        javax.swing.GroupLayout User_Home_PanelLayout = new javax.swing.GroupLayout(User_Home_Panel);
        User_Home_Panel.setLayout(User_Home_PanelLayout);
        User_Home_PanelLayout.setHorizontalGroup(
            User_Home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(User_Home_Body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        User_Home_PanelLayout.setVerticalGroup(
            User_Home_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(User_Home_PanelLayout.createSequentialGroup()
                .addComponent(User_Home_Body, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        User_MenuBar.setBackground(new java.awt.Color(153, 153, 153));
        User_MenuBar.setForeground(new java.awt.Color(255, 255, 255));
        User_MenuBar.setPreferredSize(new java.awt.Dimension(215, 20));

        UserMenuBar_Display.setText("Προβολή");

        Display_List_Of_Appointments.setText("Πρόγραμμα Ραντεβού");
        Display_List_Of_Appointments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Display_List_Of_AppointmentsActionPerformed(evt);
            }
        });
        UserMenuBar_Display.add(Display_List_Of_Appointments);

        Display_Patient_List.setText("Λίστα Ασθενών");
        UserMenuBar_Display.add(Display_Patient_List);

        Display_Order_History.setText("Ιστορικό Παραγγελιών");
        UserMenuBar_Display.add(Display_Order_History);

        User_MenuBar.add(UserMenuBar_Display);

        MenuBar_Prescribe.setText("Συνταγογράφιση");
        MenuBar_Prescribe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MenuBar_PrescribeMousePressed(evt);
            }
        });
        MenuBar_Prescribe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuBar_PrescribeActionPerformed(evt);
            }
        });
        User_MenuBar.add(MenuBar_Prescribe);

        User_Profile_Menu_Title.setText("\"User_Name\"");
        User_Profile_Menu_Title.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        User_Profile_Menu_Title.setIconTextGap(0);

        User_Profile_Options.setText("Eπιλογές");
        User_Profile_Options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                User_Profile_OptionsActionPerformed(evt);
            }
        });
        User_Profile_Menu_Title.add(User_Profile_Options);

        User_Profile_Logout.setText("Αποσύνδεση");
        User_Profile_Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                User_Profile_LogoutActionPerformed(evt);
            }
        });
        User_Profile_Menu_Title.add(User_Profile_Logout);

        User_MenuBar.add(Box.createHorizontalGlue());

        User_MenuBar.add(User_Profile_Menu_Title);

        User_MainMenu.setJMenuBar(User_MenuBar);

        javax.swing.GroupLayout User_MainMenuLayout = new javax.swing.GroupLayout(User_MainMenu.getContentPane());
        User_MainMenu.getContentPane().setLayout(User_MainMenuLayout);
        User_MainMenuLayout.setHorizontalGroup(
            User_MainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(User_Home_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        User_MainMenuLayout.setVerticalGroup(
            User_MainMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(User_Home_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        ErrorDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        ErrorDialog.setTitle("Error");
        ErrorDialog.setMinimumSize(new java.awt.Dimension(600, 80));
        ErrorDialog.setResizable(false);
        ErrorDialog.setSize(new java.awt.Dimension(600, 150));
        ErrorDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                ErrorDialogWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(600, 80));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 80));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Could not find \"config.ini\" in the application folder or bad file! Program will now terminate.");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addComponent(jButton1)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ErrorDialogLayout = new javax.swing.GroupLayout(ErrorDialog.getContentPane());
        ErrorDialog.getContentPane().setLayout(ErrorDialogLayout);
        ErrorDialogLayout.setHorizontalGroup(
            ErrorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ErrorDialogLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ErrorDialogLayout.setVerticalGroup(
            ErrorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
        );

        PrescriptionFrame.setAlwaysOnTop(true);
        PrescriptionFrame.setSize(new java.awt.Dimension(611, 572));

        jLabel11.setText("ΡΑΝΤΕΒΟΥ");

        jLabel15.setText("Συνταγή :");

        PrescriptionFrame_AppointmentList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(PrescriptionFrame_AppointmentList);

        PrescriptionFrame_Prescription.setColumns(20);
        PrescriptionFrame_Prescription.setRows(5);
        jScrollPane3.setViewportView(PrescriptionFrame_Prescription);

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(jLabel11)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PrescriptionFrameLayout = new javax.swing.GroupLayout(PrescriptionFrame.getContentPane());
        PrescriptionFrame.getContentPane().setLayout(PrescriptionFrameLayout);
        PrescriptionFrameLayout.setHorizontalGroup(
            PrescriptionFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        PrescriptionFrameLayout.setVerticalGroup(
            PrescriptionFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        Display_Schedule_Frame.setResizable(false);
        Display_Schedule_Frame.setSize(new java.awt.Dimension(526, 712));

        User_Home_LeftSide1.setBackground(new java.awt.Color(255, 255, 255));
        User_Home_LeftSide1.setAlignmentX(0.0F);
        User_Home_LeftSide1.setAlignmentY(0.0F);
        User_Home_LeftSide1.setPreferredSize(new java.awt.Dimension(480, 700));

        Scedule_Panel_Title.setBackground(new java.awt.Color(153, 153, 153));
        Scedule_Panel_Title.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Scedule_Panel_Title.setForeground(new java.awt.Color(51, 51, 51));
        Scedule_Panel_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Scedule_Panel_Title.setText("ΛΙΣΤΑ ΡΑΝΤΕΒΟΥ");
        Scedule_Panel_Title.setFocusable(false);
        Scedule_Panel_Title.setPreferredSize(new java.awt.Dimension(505, 20));

        DatedAppointmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(DatedAppointmentTable);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Φίλτρο Ημερομηνίας:");

        jLabel17.setText("Από: ");

        jLabel18.setText("Έως:");

        DateFilter_From.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        DateFilter_From.setText(LocalDate.now().getDayOfMonth()+"/"+LocalDate.now().getMonthValue()+"/"+LocalDate.now().getYear());

        DateFilter_To.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));
        DateFilter_To.setText(LocalDate.now().plusDays(7).getDayOfMonth()+"/"+LocalDate.now().getMonthValue()+"/"+LocalDate.now().getYear());

        DateFilter_Submit.setText("Εμφάνιση");
        DateFilter_Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateFilter_SubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout User_Home_LeftSide1Layout = new javax.swing.GroupLayout(User_Home_LeftSide1);
        User_Home_LeftSide1.setLayout(User_Home_LeftSide1Layout);
        User_Home_LeftSide1Layout.setHorizontalGroup(
            User_Home_LeftSide1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5)
            .addComponent(Scedule_Panel_Title, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)
            .addGroup(User_Home_LeftSide1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(User_Home_LeftSide1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(User_Home_LeftSide1Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DateFilter_From, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DateFilter_To, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DateFilter_Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        User_Home_LeftSide1Layout.setVerticalGroup(
            User_Home_LeftSide1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(User_Home_LeftSide1Layout.createSequentialGroup()
                .addComponent(Scedule_Panel_Title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(User_Home_LeftSide1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(DateFilter_From, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(DateFilter_To, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DateFilter_Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout Display_Schedule_FrameLayout = new javax.swing.GroupLayout(Display_Schedule_Frame.getContentPane());
        Display_Schedule_Frame.getContentPane().setLayout(Display_Schedule_FrameLayout);
        Display_Schedule_FrameLayout.setHorizontalGroup(
            Display_Schedule_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 526, Short.MAX_VALUE)
            .addGroup(Display_Schedule_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(User_Home_LeftSide1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE))
        );
        Display_Schedule_FrameLayout.setVerticalGroup(
            Display_Schedule_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 717, Short.MAX_VALUE)
            .addGroup(Display_Schedule_FrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(User_Home_LeftSide1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ιατρικό Γραφείο");
        setBackground(new java.awt.Color(204, 204, 255));
        setName("LoginWindow"); // NOI18N

        LoginFrame.setBackground(new java.awt.Color(204, 204, 255));
        LoginFrame.setForeground(new java.awt.Color(204, 204, 255));
        LoginFrame.setAlignmentX(0.0F);
        LoginFrame.setAlignmentY(0.0F);

        LoginForm.setBackground(new java.awt.Color(255, 255, 255));
        javax.swing.border.SoftBevelBorder border = new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED);
        LoginForm.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        LoginForm.setForeground(new java.awt.Color(255, 255, 255));

        LoginForm_Username.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        LoginForm_Username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                LoginForm_UsernameFocusGained(evt);
            }
        });
        LoginForm_Username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LoginForm_UsernameKeyPressed(evt);
            }
        });

        LoginForm_Password.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        LoginForm_Password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                LoginForm_PasswordFocusGained(evt);
            }
        });
        LoginForm_Password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LoginForm_PasswordKeyPressed(evt);
            }
        });

        LoginForm_SubmitButton.setText("Σύνδεση");
        LoginForm_SubmitButton.setBorder(new javax.swing.border.MatteBorder(null));
        LoginForm_SubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LoginForm_SubmitButtonMouseClicked(evt);
            }
        });
        LoginForm_SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginForm_SubmitButtonActionPerformed(evt);
            }
        });

        LoginForm_Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Avatar.png"))); // NOI18N

        UsernameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UsernameLabel.setText("Όνομα Χρήστη");

        PasswordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PasswordLabel.setText("Κωδικός Πρόσβασης");
        PasswordLabel.setToolTipText("");

        WrongCredentialsMessage.setForeground(new java.awt.Color(51, 0, 0));
        WrongCredentialsMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WrongCredentialsMessage.setFocusable(false);

        javax.swing.GroupLayout LoginFormLayout = new javax.swing.GroupLayout(LoginForm);
        LoginForm.setLayout(LoginFormLayout);
        LoginFormLayout.setHorizontalGroup(
            LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFormLayout.createSequentialGroup()
                .addGroup(LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(LoginFormLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(WrongCredentialsMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(LoginFormLayout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LoginForm_Image, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LoginForm_Password, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LoginForm_Username, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(LoginForm_SubmitButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(UsernameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PasswordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        LoginFormLayout.setVerticalGroup(
            LoginFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginFormLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(LoginForm_Image, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UsernameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LoginForm_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LoginForm_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LoginForm_SubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(WrongCredentialsMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );

        javax.swing.GroupLayout LoginFrameLayout = new javax.swing.GroupLayout(LoginFrame);
        LoginFrame.setLayout(LoginFrameLayout);
        LoginFrameLayout.setHorizontalGroup(
            LoginFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFrameLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(LoginForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        LoginFrameLayout.setVerticalGroup(
            LoginFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginFrameLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(LoginForm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        //jPanel1.setBounds(0,0,new_Height,new_Width*100);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LoginFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(LoginFrame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void FillSchedule(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ΩΡΑ");
        model.addColumn("ΑΣΘΕΝΗΣ");
        model.addColumn("ΙΑΤΡΟΣ");
        DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalTextPosition(DefaultTableCellRenderer.CENTER);
        
        
        
        for ( Appointment x : AppointmentList.getSchedule()){
            model.addRow(new Object[]{x.getDate().getHour()+":"+x.getDate().getMinute(), x.getPetient().getName(), x.getDoctorId()});
        } 
        
        this.AppointmentTable.setModel(model);
        //this.AppointmentTable.setDefaultRenderer(this.AppointmentTable.getColumnClass(NORMAL), dtcr);
    }
        private void FillSchedule(ArrayList<Appointment> a){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("ΗΜΕΡΟΜΗΝΙΑ");
        model.addColumn("ΩΡΑ");
        model.addColumn("ΑΣΘΕΝΗΣ");
        model.addColumn("ΙΑΤΡΟΣ");
        DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalTextPosition(DefaultTableCellRenderer.CENTER);
        
        
        
        for ( Appointment x : a){
            model.addRow(new Object[]{
                x.getDate().getDayOfMonth()+"/"+x.getDate().getMonth().getValue()+"/"+x.getDate().getYear(),
                x.getDate().getHour()+":"+x.getDate().getMinute(), 
                x.getPetient().getName(),
                this.FlagCommander("G4", String.valueOf(x.getDoctorId()))
            });
        } 
        
        this.DatedAppointmentTable.setModel(model);
        //this.AppointmentTable.setDefaultRenderer(this.AppointmentTable.getColumnClass(NORMAL), dtcr);
    }

    /*   ______________________________________________________
    *   |                     GENERAL FLAGS                    |
    *   |------------------------------------------------------|
    *   |               L0  :   LOGIN FAIL                     |
    *   |               L1  :   LOGIN SUCCESS                  |
    *   |               L2  :   SEND CREDENTIALS               |
    *   |               G0  :   GET TODAY'S SCHEDULE           |
    *   |               G1  :   LOGOUT                         |
    *   |               G2  :   LOGOUT                         |
    *   |               G3  :   LOGOUT                         |
    *   |               G4  :   LOGOUT                         |
    *   |               C1  :   LOGOUT                         |
    *   |               C2  :   LOGOUT                         |
    *   |               C3  :   LOGOUT                         |
    *   |               C4  :   LOGOUT                         |        
    *   |______________________________________________________|
    */
    @SuppressWarnings("unchecked")
    private String FlagCommander(String FLAG,Object argv){
        Object rcv;
        switch(FLAG){
            case "L0":
                return "L0";           
            case "L1":
                return "L1";
            case "L2":
               
                
                            conn.sendMessage("L2");
                            conn.sendMessage(LoginForm_Username.getText());
                            conn.sendMessage(String.valueOf(LoginForm_Password.getPassword()));

                            rcv = conn.receiveObject();
                            System.out.println("L2: Received "+(String)rcv);
                            return FlagCommander((String) rcv,null);
                
                /*
                t = new Thread(new Runnable(){
                    @Override
                        public void run() {
                        try {
                            LoginUI.WrongCredentialsMessage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/loader.gif")));
                            Object rcv;
                            conn.sendMessage("L2");
                            conn.sendMessage(LoginForm_Username.getText());
                            conn.sendMessage(String.valueOf(LoginForm_Password.getPassword()));

                            rcv = conn.receiveObject();
                            System.out.println("L2: Received "+(String)rcv);
                            L = FlagCommander((String) rcv,null);
                        } 
                        catch (Exception ex) {
                            New_Patient_Submit_Result.setText("Error: "+ex.getMessage());

                        }
                    }  
                    });
                t.start();
        {
            try {
                t.join();
            } catch (InterruptedException ex) {
                Logger.getLogger(LoginUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
                
                return L;
                */
            case "L3":
                conn.Close();
                conn = null;
                return "";
            case "G0":      
                conn.sendMessage("G0");
                rcv = conn.receiveObject();
                if (rcv != null){
                    this.AppointmentList.SetAppointmentList((ArrayList<Appointment>) rcv);
                    this.FillSchedule();
                }
                else {
                    System.out.println("receiveObject returned null.");
                    DefaultTableModel model = new DefaultTableModel();
                    model.addColumn("ΩΡΑ");
                    model.addColumn("ΑΣΘΕΝΗΣ");
                    model.addColumn("ΙΑΤΡΟΣ");
                    model.addRow(new Object[]{"","ΔΕΝ ΥΠΑΡΧΟΥΝ ΡΑΝΤΕΒΟΥ ΣΗΜΕΡΑ",""});
                }
                return "";
            
                
            case "G1":
                conn.sendMessage("G1");
                String tmp = this.DateFilter_From.getText();
                String[] tmp1 = tmp.split("/");
                conn.sendObject(LocalDate.of(Integer.parseInt(tmp1[2]),Integer.parseInt(tmp1[1]),Integer.parseInt(tmp1[0])));
                tmp = this.DateFilter_To.getText();
                tmp1 = tmp.split("/");
                conn.sendObject(LocalDate.of(Integer.parseInt(tmp1[2]),Integer.parseInt(tmp1[1]),Integer.parseInt(tmp1[0])));
                this.FillSchedule(conn.receiveObject());
                return "";
            case "G2":
                conn.sendMessage("G2");
                rcv = conn.receiveObject();
                if (rcv != null){
                    return (String) rcv;
                }
                else {
                    System.out.println("Server sent to me null user name.");
                }
                return "";
            case "G3":
                return "";
            case "G4":
                conn.sendMessage("G4");
                conn.sendObject(Integer.valueOf((String)argv));
                return conn.receiveObject();
            
            case "C1":
                return "";
            case "C2":
                try {
                    t = new Thread(new Runnable(){
                    @Override
                        public void run() {
                        try {
                            New_Patient_Submit_Result.setText("Sending...");
                            conn.sendMessage("C2");
                            boolean a = conn.sendObject((Patient)argv);
                            String b = conn.receiveMessage();
                            System.out.println("Server sent to me "+b);
                            if (a && b.equals("S0")){
                                New_Patient_Submit_Result.setText("Patient Sucessfully Added To Database");
                                New_Patient_Submit_Result.setForeground(Color.GREEN);
                            } else if (b.equals("F0")){
                                New_Patient_Submit_Result.setText("Operation Failed");
                                New_Patient_Submit_Result.setForeground(Color.RED);
                            }else {
                                New_Patient_Submit_Result.setForeground(Color.RED);
                                New_Patient_Submit_Result.setText("Invalid Response");
                            }
                            Thread.sleep(5000);
                            New_Patient_Submit_Result.setForeground(Color.BLACK);
                            New_Patient_Submit_Result.setText("");
                        } 
                        catch (Exception ex) {
                            New_Patient_Submit_Result.setText("Error: "+ex.getMessage());
                        }
                    }  
                    });
                    t.start();
                    

                    return "";
                }
                catch (Exception ex){
                    
                }
            case "C3":
                return "";
            case "C4":
                return "";
            
            
            
            default:
                return "";
        }
    }
    
    
    
    private void FillSchedule(int did){
        DefaultTableModel model2 = new DefaultTableModel();
        model2.addColumn("ΩΡΑ");
        model2.addColumn("ΑΣΘΕΝΗΣ");
        
        DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalTextPosition(DefaultTableCellRenderer.CENTER);
        
        ArrayList<Appointment> list = AppointmentList.getSchedule();
        
        for ( Appointment x : list){
            if(x.getDoctorId()==did){
                model2.addRow(new Object[]{x.getDate(), x.getPetient().getName()});
            }
        } 
        
        this.PrescriptionFrame_AppointmentList.setModel(model2);
    } 
    
    private boolean isUserInputValid(){
        boolean flag =true;
        
        //System.out.println(LoginForm_Username.getText()+LoginForm_Password.getPassword().toString());
        if (LoginForm_Username.getText().equals("") || (!(LoginForm_Username.getText().matches("^[a-zA-Z0-9]+$")))){
            LoginForm_Username.setBorder(BorderFactory.createLineBorder(Color.red)); 
            flag = false;
        }

        if (LoginForm_Password.getPassword().length < 6){
            //this.passworderror.setVisible(true);
            LoginForm_Password.setBorder(BorderFactory.createLineBorder(Color.red));
            flag=false;
        }
        return flag;
    }
    
    private void UIPopulator(){
        this.User_Profile_Menu_Title.setText(this.FlagCommander("G2",null));
    }

    
    private void LoginForm_SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginForm_SubmitButtonActionPerformed

        /*   _______________________________________________________
         *   |                     LOGIN FLAGS                      |
         *   |------------------------------------------------------|
         *   |               L0  :   LOGIN FAILED                   |
         *   |               L1  :   LOGIN SUCCESS                  |
         *   |               L2  :   LOGIN CREDENTIALS              |
         *   |               L3  :   LOGOUT                         |
         *   |______________________________________________________|
         */
        LoginUI.WrongCredentialsMessage.setText("");
        LoginUI.WrongCredentialsMessage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/loader.gif")));
        conn = new ConnectionManager();
        if (this.isUserInputValid() == true){
            if ( Connection() == true){
                
                switch (this.FlagCommander("L2",null)) {
                    case "L1": // LOGIN SUCCESS
                        this.setVisible(false); // HIDE LOGIN WINDOW
                        this.User_MainMenu.setVisible(true); // SHOW HOME SCREEN
                        this.FlagCommander("G0",null);
                        this.UIPopulator();
                        break;
                    case "L0": // LOGIN FAILED
                        LoginUI.WrongCredentialsMessage.setIcon(null);
                        LoginUI.WrongCredentialsMessage.setText("Εισάγατε λάθος στοιχεία. Δοκιμάστε ξανά");
                        conn.Close();
                        break;
                    case "No Response": // SOCKET READ TIMEOUT
                        LoginUI.WrongCredentialsMessage.setIcon(null);
                        LoginUI.WrongCredentialsMessage.setText("Ο διακομιστής άργησε πολύ να απαντήσει ή είναι offline.");
                        conn.Close();
                        break;
                    default:
                        LoginUI.WrongCredentialsMessage.setIcon(null);
                        LoginUI.WrongCredentialsMessage.setText("Μή έγκυρη απάντηση απο το διακομιστή.");
                        conn.Close();
                        break;
                }
            }
            else {
                LoginUI.WrongCredentialsMessage.setIcon(null);
                LoginUI.WrongCredentialsMessage.setText("Αποτυχία σύνδεσης με τον διακομιστή.");
                //conn.Close();
            }
        }
        LoginUI.WrongCredentialsMessage.setIcon(null);
        
         
    }//GEN-LAST:event_LoginForm_SubmitButtonActionPerformed

    private void LoginForm_SubmitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginForm_SubmitButtonMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_LoginForm_SubmitButtonMouseClicked

    private void LoginForm_UsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LoginForm_UsernameFocusGained
        // TODO add your handling code here:
        LoginForm_Username.setBorder(borderc);
        LoginForm_Username.selectAll();

    }//GEN-LAST:event_LoginForm_UsernameFocusGained

    private void LoginForm_PasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LoginForm_PasswordFocusGained
        // TODO add your handling code here:
        LoginForm_Password.setBorder(borderc);
        LoginForm_Password.selectAll();
        //this.passworderror.setVisible(false);
    }//GEN-LAST:event_LoginForm_PasswordFocusGained

    private void User_Profile_OptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_User_Profile_OptionsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_User_Profile_OptionsActionPerformed

    private void User_Profile_LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_User_Profile_LogoutActionPerformed
        conn.Close();
        this.User_MainMenu.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_User_Profile_LogoutActionPerformed

    private void User_MainMenuWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_User_MainMenuWindowClosed
        this.setVisible(true);
        this.FlagCommander("L3",null);
    }//GEN-LAST:event_User_MainMenuWindowClosed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ErrorDialogWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_ErrorDialogWindowClosed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ErrorDialogWindowClosed

    private boolean checkFields(){
        
        if(!this.New_Patient_Surname.getText().matches("[a-zA-Zα-ωΑ-Ω]+")){
            this.New_Patient_Surname.setBorder(BorderFactory.createLineBorder(Color.red));
            return false;
        }
        if(!this.New_Patient_Name.getText().matches("[a-zA-Zα-ωΑ-Ω]+")){
            this.New_Patient_Name.setBorder(BorderFactory.createLineBorder(Color.red));
            return false;
        }
        if(!this.New_Patient_Phone.getText().matches("[0-9]+") && this.New_Patient_Phone.getText().length()>10 ){
            this.New_Patient_Phone.setBorder(BorderFactory.createLineBorder(Color.red));
            return false;
        }
        if(!this.New_Patient_AMKA.getText().matches("[0-9]+") && this.New_Patient_Phone.getText().length()>10){
            this.New_Patient_AMKA.setBorder(BorderFactory.createLineBorder(Color.red));
            return false;
        }
        //TODO CHECK DATE
        return true;
        
    }
    
    private void New_Patient_SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_Patient_SubmitActionPerformed
        if(checkFields()){
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("d/MM/yyyy");
            LocalDate birthdate = LocalDate.parse(this.New_Patient_BirthDate.getText(),formatter);
            
            Patient tmp = new Patient(Integer.parseInt(this.New_Patient_AMKA.getText()),this.New_Patient_Name.getText(),this.New_Patient_Surname.getText(),this.New_Patient_Phone.getText(),this.New_Patient_Sex.getSelectedIndex(),birthdate);
            this.FlagCommander("C2", tmp);
            
        }
    }//GEN-LAST:event_New_Patient_SubmitActionPerformed
//
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    public boolean checkNewAppointment(){
        if(!this.New_Appointment_Patient_Name.getText().matches("[A-Za-zΑ-Ωα-ω]+")){
            this.New_Appointment_Patient_Name.setBorder(BorderFactory.createLineBorder(Color.red));
            return false;
        }
        if(!this.New_Appointment_Doctor.getText().matches("[0-9]+")){
            this.New_Appointment_Doctor.setBorder(BorderFactory.createLineBorder(Color.red));
            return false;
        }
        if(this.New_Appointment_Date.getText().equals("")){
            this.New_Appointment_Date.setBorder(BorderFactory.createLineBorder(Color.red));
            return false;
        }
        if(this.New_Appointment_Time.getText().equals("")){
            this.New_Appointment_Time.setBorder(BorderFactory.createLineBorder(Color.red));
            return false;
        }
        return true;
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(this.checkNewAppointment()){
            
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
            String dateTime = this.New_Appointment_Date.getText()+" "+ this.New_Appointment_Time.getText();
            LocalDateTime i = LocalDateTime.parse(dateTime,formatter);

            Appointment ap = new Appointment(new Patient(new Integer(123),"ddd","ffffff","qqqqqqq",(short) 3,LocalDate.now()),i,Integer.parseInt(this.New_Appointment_Doctor.getText()));

            //this.New_Appointment_Date;
            //this.New_Appointment_Doctor;
            //this.New_Appointment_Time;
            //this.New_Appointment_Patient_Name;

            
                    conn.sendMessage("C1");
                    //sending an appointment
                    conn.sendObject((Serializable) ap);
                
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    public boolean checkNewOrder(){
        if(!this.paragelia_posotita.getText().matches("[0-9]+")){
            this.paragelia_posotita.setBorder(BorderFactory.createLineBorder(Color.red));
            return false;
        }
        
        if(!this.paragelia_name.getText().matches("[A-Za-zΑ-Ωα-ω]+")){
            this.paragelia_name.setBorder(BorderFactory.createLineBorder(Color.red));
            return false;
        }
        
        return true;
    }
    
    private void New_Appointment_Patient_NameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_New_Appointment_Patient_NameFocusGained
        this.New_Appointment_Patient_Name.setBorder(borderc);
    }//GEN-LAST:event_New_Appointment_Patient_NameFocusGained

    private void New_Appointment_DoctorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_New_Appointment_DoctorFocusGained
        this.New_Appointment_Doctor.setBorder(borderc);
    }//GEN-LAST:event_New_Appointment_DoctorFocusGained

    private void New_Appointment_DateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_New_Appointment_DateFocusGained
        this.New_Appointment_Date.setBorder(borderc);
    }//GEN-LAST:event_New_Appointment_DateFocusGained

    private void New_Appointment_TimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_New_Appointment_TimeFocusGained
        this.New_Appointment_Time.setBorder(borderc);
    }//GEN-LAST:event_New_Appointment_TimeFocusGained

    private void deleteStorageItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteStorageItemActionPerformed
        if(this.item_list.size()>0){
            DefaultTableModel model2 = new DefaultTableModel();
            DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
            dtcr.setHorizontalTextPosition(DefaultTableCellRenderer.CENTER);

            model2.addColumn("ΟΝΟΜΑ");
            model2.addColumn("ΠΟΣΟΤΗΤΑ");

            this.item_list.remove(this.item_list.size()-1);
            for ( StorageItem x : item_list){
                model2.addRow(new Object[]{x.getItemName(),x.getItemQuantity()});
            }
            this.TableOrder.setModel(model2);
        }
    }//GEN-LAST:event_deleteStorageItemActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void kataxorisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kataxorisiActionPerformed
        DefaultTableModel model2 = new DefaultTableModel();
        DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer();
        dtcr.setHorizontalTextPosition(DefaultTableCellRenderer.CENTER);
        if(this.checkNewOrder()){

            model2.addColumn("ΟΝΟΜΑ");
            model2.addColumn("ΠΟΣΟΤΗΤΑ");

            StorageItem tmp = new StorageItem(this.paragelia_name.getText(),Integer.parseInt(this.paragelia_posotita.getText()));

            this.item_list.add(tmp);
            for ( StorageItem x : item_list){
                model2.addRow(new Object[]{x.getItemName(),x.getItemQuantity()});
            }

            this.TableOrder.setModel(model2);

        }
    }//GEN-LAST:event_kataxorisiActionPerformed

    private void paragelia_posotitaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_paragelia_posotitaFocusGained
        this.paragelia_posotita.setBorder(borderc);
    }//GEN-LAST:event_paragelia_posotitaFocusGained

    private void paragelia_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paragelia_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paragelia_nameActionPerformed

    private void paragelia_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_paragelia_nameFocusGained
        this.paragelia_name.setBorder(borderc);
    }//GEN-LAST:event_paragelia_nameFocusGained

    private void MenuBar_PrescribeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuBar_PrescribeActionPerformed

        this.PrescriptionFrame.setVisible(true);

    }//GEN-LAST:event_MenuBar_PrescribeActionPerformed

    private void MenuBar_PrescribeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuBar_PrescribeMousePressed

        this.FillSchedule(1);
        this.PrescriptionFrame.setVisible(true);
    }//GEN-LAST:event_MenuBar_PrescribeMousePressed

    private void Display_List_Of_AppointmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Display_List_Of_AppointmentsActionPerformed
        // TODO add your handling code here:
        this.Display_Schedule_Frame.setVisible(true);
    }//GEN-LAST:event_Display_List_Of_AppointmentsActionPerformed

    private void DateFilter_SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateFilter_SubmitActionPerformed
        // TODO add your handling code here:
        this.FlagCommander("G1",null);
    }//GEN-LAST:event_DateFilter_SubmitActionPerformed

    private void LoginForm_PasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LoginForm_PasswordKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == '\n')
            this.LoginForm_SubmitButton.doClick();
    }//GEN-LAST:event_LoginForm_PasswordKeyPressed

    private void LoginForm_UsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LoginForm_UsernameKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyChar() == '\n')
            this.LoginForm_SubmitButton.doClick();
    }//GEN-LAST:event_LoginForm_UsernameKeyPressed


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        if (MedicalOffice.ConfigFileExists() == false || args[0] == "-1"){
            java.awt.EventQueue.invokeLater(() -> {
            new LoginUI(1);
            
            });
        }
        else {
        
            
            
            java.awt.EventQueue.invokeLater(() -> {
                new LoginUI().setVisible(true);
            });
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AppointmentTable;
    private javax.swing.JFormattedTextField DateFilter_From;
    private javax.swing.JButton DateFilter_Submit;
    private javax.swing.JFormattedTextField DateFilter_To;
    private javax.swing.JTable DatedAppointmentTable;
    private javax.swing.JMenuItem Display_List_Of_Appointments;
    private javax.swing.JMenuItem Display_Order_History;
    private javax.swing.JMenuItem Display_Patient_List;
    private javax.swing.JFrame Display_Schedule_Frame;
    private javax.swing.JDialog ErrorDialog;
    private javax.swing.JPanel LoginForm;
    private javax.swing.JLabel LoginForm_Image;
    private static javax.swing.JPasswordField LoginForm_Password;
    private javax.swing.JButton LoginForm_SubmitButton;
    private static javax.swing.JTextField LoginForm_Username;
    private javax.swing.JPanel LoginFrame;
    private javax.swing.JMenu MenuBar_Prescribe;
    private javax.swing.JFormattedTextField New_Appointment_Date;
    private javax.swing.JTextField New_Appointment_Doctor;
    private javax.swing.JPanel New_Appointment_Panel;
    private javax.swing.JTextField New_Appointment_Patient_Name;
    private javax.swing.JFormattedTextField New_Appointment_Time;
    private javax.swing.JPanel New_Order_Panel;
    private javax.swing.JTextField New_Patient_AMKA;
    private javax.swing.JFormattedTextField New_Patient_BirthDate;
    private javax.swing.JTextField New_Patient_Name;
    private javax.swing.JPanel New_Patient_Panel;
    private javax.swing.JTextField New_Patient_Phone;
    private javax.swing.JComboBox<String> New_Patient_Sex;
    private javax.swing.JButton New_Patient_Submit;
    public static javax.swing.JLabel New_Patient_Submit_Result;
    private javax.swing.JTextField New_Patient_Surname;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JFrame PrescriptionFrame;
    private javax.swing.JTable PrescriptionFrame_AppointmentList;
    private javax.swing.JTextArea PrescriptionFrame_Prescription;
    private javax.swing.JLabel Scedule_Panel_Title;
    private javax.swing.JTable TableOrder;
    private javax.swing.JLabel Todays_Scedule_Title;
    private javax.swing.JMenu UserMenuBar_Display;
    private javax.swing.JPanel User_Home_Body;
    private javax.swing.JPanel User_Home_LeftSide;
    private javax.swing.JPanel User_Home_LeftSide1;
    private javax.swing.JPanel User_Home_Panel;
    private javax.swing.JPanel User_Home_RightSide;
    private javax.swing.JFrame User_MainMenu;
    private javax.swing.JMenuBar User_MenuBar;
    private javax.swing.JMenuItem User_Profile_Logout;
    private javax.swing.JMenu User_Profile_Menu_Title;
    private javax.swing.JMenuItem User_Profile_Options;
    private javax.swing.JLabel UsernameLabel;
    private static javax.swing.JLabel WrongCredentialsMessage;
    private javax.swing.JButton deleteStorageItem;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton kataxorisi;
    private javax.swing.JTextField paragelia_name;
    private javax.swing.JTextField paragelia_posotita;
    // End of variables declaration//GEN-END:variables
}
